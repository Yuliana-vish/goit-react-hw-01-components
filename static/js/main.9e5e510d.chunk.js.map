{"version":3,"sources":["components/profile/Profile.module.css","components/friendList/FriendList.module.css","components/statistic/Statistic.module.css","components/transactions/Transactions.module.css","components/container/Container.module.css","components/container/Container.jsx","components/img/defaultImg.jpg","components/profile/Profile.jsx","components/statistic/Statistic.jsx","components/friendList/FrienListItem.jsx","components/friendList/FriendList.jsx","components/transactions/Transactions.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Profile","name","tag","location","avatar","stats","profile","description","src","alt","width","item","span","stat","followers","views","likes","defaultProps","defaultImg","Statistic","title","list","map","index","id","label","percentage","style","backgroundColor","getRandColor","color","Math","floor","random","pow","toString","length","FriendListItem","isOnline","green","red","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e5e510d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2dKvP\",\"description\":\"Profile_description__1crZf\",\"avatar\":\"Profile_avatar__1SbS_\",\"name\":\"Profile_name__1S75E\",\"tag\":\"Profile_tag__quqWz\",\"location\":\"Profile_location__2sUI0\",\"stats\":\"Profile_stats__2XzC9\",\"item\":\"Profile_item__1Q0-2\",\"span\":\"Profile_span__30aZb\",\"stat\":\"Profile_stat__UJDxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2fSmC\",\"item\":\"FriendList_item__1DP2T\",\"avatar\":\"FriendList_avatar__xbWkJ\",\"name\":\"FriendList_name__1y5Y4\",\"red\":\"FriendList_red__3PfND\",\"green\":\"FriendList_green__1F7wD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistic_container__1WYKb\",\"title\":\"Statistic_title__2KWgb\",\"list\":\"Statistic_list__3wTRZ\",\"item\":\"Statistic_item__3hIBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__1eP-V\",\"item\":\"Transactions_item__2Pe_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__39E9s\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","export default __webpack_public_path__ + \"static/media/defaultImg.7896f010.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\nimport defaultImg from '../img/defaultImg.jpg';\r\n\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n      <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n          <img\r\n            src={avatar}\r\n            alt=\"Аватар пользователя\"\r\n            className={styles.avatar}\r\n            width=\"320\"\r\n          />\r\n          <p className={styles.name}>{name}</p>\r\n          <p className={styles.tag}>@{tag}</p>\r\n          <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n          <li className={styles.item}>\r\n            <span className={styles.span}>Followers</span>\r\n            <span className={styles.stat}>{stats.followers}</span>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <span className={styles.span}>Views</span>\r\n            <span className={styles.stat}>{stats.views}</span>\r\n          </li>\r\n          <li className={styles.item}>\r\n            <span className={styles.span}>Likes</span>\r\n            <span className={styles.stat}>{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n};\r\nProfile.defaultProps = {\r\n    avatar: defaultImg,\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    \r\n};\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nconst Statistic = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.container}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      <ul className={styles.list}>\r\n        {stats.map(({ id, label, percentage }, index) => (\r\n          <li\r\n            className={styles.item}\r\n            key={id}\r\n            style={{\r\n              backgroundColor: getRandColor()}}\r\n          >\r\n            <span className={styles.label}>{label}</span>\r\n            <span className={styles.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nfunction getRandColor() {\r\n  let color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\r\n  while (color.length < 6) {\r\n    color = '0' + color;\r\n  }\r\n  return '#' + color;\r\n}\r\n\r\n\r\nStatistic.defaultProps = { title: '' };\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../friendList/FriendList.module.css';\r\nimport defaultImg from '../img/defaultImg.jpg'\r\n\r\n\r\nconst FriendListItem = ({ isOnline, avatar, name, id }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <span className={isOnline ? styles.green : styles.red}></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar: defaultImg\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../friendList/FriendList.module.css';\r\nimport FriendListItem from '../friendList/FrienListItem';\r\n\r\n   \r\nconst FriendList = ({friends}) => {\r\n    return (\r\n      <section className={styles.container}>\r\n        <ul className={styles.friendList}>\r\n          {friends.map(({ avatar, name, id, isOnline }) => (\r\n            <FriendListItem\r\n              key={id}\r\n              avatar={avatar}\r\n              isOnline={isOnline}\r\n              name={name}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n}\r\nFriendListItem.defaultProps = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/763/763704.svg',\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../transactions/Transactions.module.css';\r\n\r\n\r\n\r\nconst TransactionHistory = ({items}) => {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {items.map(({ id, type, amount, currency }) => (\r\n            <tr className={styles.item} key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>  \r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;","\nimport React from 'react';\nimport './App.css';\n///\nimport Container from './components/container/Container.jsx';\nimport Profile from './components/profile/Profile.jsx';\nimport Statistic from './components/statistic/Statistic.jsx';\nimport FriendList from './components/friendList/FriendList.jsx';\nimport TransactionHistory from './components/transactions/Transactions.jsx';\n///\nimport user from './dataJson/user.json';\nimport statisticData from './dataJson/statistic.json';\nimport friends from './dataJson/friendList.json';\nimport transactions from './dataJson/trasactions.json';\n\n\n\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistic title=\"Upload stats\" stats={statisticData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}